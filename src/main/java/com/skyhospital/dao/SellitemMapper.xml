<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.skyhospital.dao.SellitemMapper">
	<sql id="Base_Column_List">
		SellItem, SellAccountId, MedicineId, number, isdel
	</sql>

	<!--分页查询消费明细-->
	<select id="findDetailPage" resultType="Sellitem">
		select st.medicineId,mc.MedicineName,sp.SpecificationName,ds.DosageFormsName,
		un.UnitName,st.number,mf.ManufacturerName,sa.PayWay,sa.ActuallyPaid,sa.Salesman
		from sellitem st
		inner join sellaccount sa on sa.SellAccountId=st.SellAccountId
		inner join medicine mc on mc.MedicineId=st.MedicineId
		inner join specification sp on sp.SpecificationId=mc.SpecificationId
		inner join dosageforms ds on ds.DosageFormsId=mc.DosageFormsId
		inner join unit un on un.UnitId=mc.UnitId
		inner join manufacturer mf on mf.ManufacturerId=mc.ManufacturerId
		<trim prefix="where" prefixOverrides="and | or">
			<if test="medicineName != null and medicineName !=''">
				and mc.MedicineName like CONCAT('%',#{medicineName},'%')
			</if>
		</trim>
		limit #{pageIndex},#{pageSize}
	</select>
	<!--分页查询消费明细总记录数-->
	<select id="findDetailCount" resultType="int">
		select count(1)
		from sellitem st
		inner join sellaccount sa on sa.SellAccountId=st.SellAccountId
		inner join medicine mc on mc.MedicineId=st.MedicineId
		inner join specification sp on sp.SpecificationId=mc.SpecificationId
		inner join dosageforms ds on ds.DosageFormsId=mc.DosageFormsId
		inner join unit un on un.UnitId=mc.UnitId
		inner join manufacturer mf on mf.ManufacturerId=mc.ManufacturerId
		<trim prefix="where" prefixOverrides="and | or">
			<if test="medicineName != null and medicineName !=''">
				and mc.MedicineName like CONCAT('%',#{medicineName},'%')
			</if>
		</trim>

	</select>


	<!--销售账单记录查询-->
	<select id="findSellItem" resultType="Sellitem">
		select sli.MedicineId,mdc.medicineName as 'medicineName',mdc.CommonName as 'commonName',
		sfc.SpecificationName as 'specificationName',mfa.ManufacturerName as 'manufacturerName',
		mdc.StandardCode as 'standardCode',mdc.IsPrescription as 'isPrescription',
		mdc.PurchasePrice as 'purchasePrice',sli.number,
		mdc.RetailStdPrice as 'retailStdPrice',
		mdc.`Comment` as 'comment',sac.sellDate as 'sellDate'
		from sellitem sli
		inner join sellaccount sac on sac.SellAccountId=sli.SellAccountId
		inner join medicine mdc on sli.MedicineId=mdc.MedicineId
		inner join manufacturer mfa on mdc.ManufacturerId=mfa.ManufacturerId
		inner join specification sfc on sfc.SpecificationId=mdc.SpecificationId
		<trim prefix="where" prefixOverrides="and | or">
			<if test="sellDate1 != null and sellDate1 != ''">
				<![CDATA[ and  sac.SellDate >= date(#{sellDate1}) ]]>
			</if>
			<if test="sellDate2 !=null and sellDate2 != ''">
				<![CDATA[ and  sac.SellDate <= date(#{sellDate2}) ]]>
			</if>
			<if test="medicineName != null and medicineName !=''">
				and mdc.MedicineName like CONCAT('%',#{medicineName},'%')
			</if>
		</trim>
		order by sac.SellDate DESC limit #{pageIndex},#{pageSize}
	</select>
	<!--查询销售总记录数-->
	<select id="findSellItemCount" resultType="int" parameterType="map">
		select count(1)
		from sellitem sli
		inner join sellaccount sac on sac.SellAccountId=sli.SellAccountId
		inner join medicine mdc on sli.MedicineId=mdc.MedicineId
		inner join manufacturer mfa on mdc.ManufacturerId=mfa.ManufacturerId
		inner join specification sfc on sfc.SpecificationId=mdc.SpecificationId
		<trim prefix="where" prefixOverrides="and | or">
			<if test="sellDate1 != null and sellDate1 != ''">
				<![CDATA[ and  sac.SellDate >= date(#{sellDate1}) ]]>
			</if>
			<if test="sellDate2 !=null and sellDate2 != ''">
				<![CDATA[ and  sac.SellDate <= date(#{sellDate2}) ]]>
			</if>
			<if test="medicineName != null and medicineName !=''">
				and mdc.MedicineName like CONCAT('%',#{medicineName},'%')
			</if>
		</trim>

	</select>
	<!--添加销售详情信息-->
	<insert id="addSellItem">
		insert into sellitem(SellAccountId, MedicineId,number)
		values(#{sellAccountId},#{medicineId},#{number})
	</insert>

</mapper>